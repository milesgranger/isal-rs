name: CI

on:
  pull_request:
  release:
    types:
      - released
      - prereleased

jobs:

  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # matches supported targets from tags in https://hub.docker.com/r/muslcc/x86_64/tags
        target: ["aarch64", "x86_64"]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: System installs
        run: |
          apt update
          apt install -y gcc-multilib

      - name: Build ISA-L
        run: |
          docker run --rm -v $(pwd):/code muslcc/x86_64:${{ matrix.target }}-linux-musl sh -c "apk add make nasm && cd /code/isal-sys/isa-l && make install host_cpu=${{ matrix.target }} prefix=./../install -f Makefile.unx CFLAGS_${{ matrix.target }}=-fPIC LDFLAGS=-static"

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}-unknown-linux-musl
          profile: minimal
          default: true

      - name: Rust Build Caching
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Build
        run: cargo build --target ${{ matrix.target }}-unknown-linux-musl

      # Cross to run the tests
      - name: Install cross
        run: cargo install cross
      
      - name: Test
        run: cross test --target ${{ matrix.target }}-unknown-linux-musl
